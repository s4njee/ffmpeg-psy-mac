name: Build FFmpeg

on:
  schedule:
    - cron: "0 6 * * *"  # Runs every day
  workflow_dispatch:      # Allows manual triggering
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: macos-latest
    env:
      CFLAGS: -O2 -pipe -fno-lto
      CXXFLAGS: -O2 -pipe -fno-lto
      LDFLAGS: -O2 -pipe -fno-lto

    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install Dependencies
        run: |
          brew install -y dav1d aom fdk-aac libvpx opus opus-tools zip meson \
            nasm autogen automake libtool freetype fontconfig fribidi openssl
      - name: Build HDR Stuff
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y

          git clone --depth 1 https://github.com/quietvoid/dovi_tool
          cd dovi_tool || exit
          rm -rf ffmpeg_build.user && mkdir ffmpeg_build.user || exit
          source "$HOME/.cargo/env" # for good measure
          cargo clean
          cargo build --release
          sudo cp target/release/dovi_tool /usr/local/bin/ 

          cd dolby_vision
          cargo install cargo-c
          cargo cinstall --release \
          --prefix="../ffmpeg_build.user" \
          --libdir="../ffmpeg_build.user"/lib \
          --includedir="../ffmpeg_build.user"/include
          cd ../ffmpeg_build.user || exit
          sudo cp ./lib/* /usr/local/lib/ -r || exit
          sudo cp ./include/* /usr/local/include/ -r
          cd

          git clone --depth 1 https://github.com/quietvoid/hdr10plus_tool
          cd hdr10plus_tool
          rm -rf ffmpeg_build.user && mkdir ffmpeg_build.user || exit
          source "$HOME/.cargo/env" # for good measure
          cargo clean
          cargo build --release
          sudo cp target/release/hdr10plus_tool /usr/local/bin/ || exit

          cd hdr10plus || exit
          RUSTFLAGS="-C target-cpu=native" cargo cinstall --release \
                --prefix="../ffmpeg_build.user" \
                --libdir="../ffmpeg_build.user"/lib \
                --includedir="../ffmpeg_build.user"/include
          cd ../ffmpeg_build.user || exit
          sudo cp ./lib/* /usr/local/lib/ -r || exit
          sudo cp ./include/* /usr/local/include/ -r


      - name: Build libogg
        run: |
          git clone --depth 1 https://github.com/xiph/ogg.git
          cd ogg
          ./autogen.sh
          ./configure --prefix="$HOME/ffmpeg_build" --disable-shared
          make -j$(nproc)
          make install
          cd ..

      - name: Build libvorbis
        run: |
          git clone --depth 1 https://github.com/xiph/vorbis.git
          cd vorbis
          ./autogen.sh
          PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" \
            ./configure --prefix="$HOME/ffmpeg_build" \
            --with-ogg="$HOME/ffmpeg_build" \
            --disable-shared
          make -j$(nproc)
          make install
          cd ..

      - name: Build LAME
        run: |
          git clone --depth 1 https://github.com/zlargon/lame.git
          cd lame
          ./configure --prefix="$HOME/ffmpeg_build" \
            --enable-nasm \
            --disable-shared
          make -j$(nproc)
          make install
          cd ..

      - name: Build Harfbuzz
        run: |
          git clone --depth 1 https://github.com/harfbuzz/harfbuzz.git
          cd harfbuzz
          mkdir build && cd build
          meson setup --prefix="$HOME/ffmpeg_build" --default-library=static ..
          ninja
          ninja install
          cd ../..

      - name: Build libass
        run: |
          git clone --depth 1 https://github.com/libass/libass.git
          cd libass
          ./autogen.sh
          PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
            --prefix="$HOME/ffmpeg_build" \
            --disable-shared \
            --enable-static
          make -j$(nproc)
          make install
          cd ..

      - name: Build SVT-AV1
        run: |


          git clone --depth 1 https://github.com/gianni-rosato/svt-av1-psy.git
          cd svt-av1-psy/Build
          PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" \
            -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_DEC=OFF \
            -DENABLE_AVX512=ON \
            -DCOVERAGE=OFF -DLIBDOVI_FOUND=1 \
            -DLIBHDR10PLUS_RS_FOUND=1 \
            -DBUILD_SHARED_LIBS=OFF ..
          PATH="$HOME/bin:$PATH" make -j$(nproc)
          make install
          cd ../..

      - name: Build x265
        run: |
          wget -O x265.tar.bz2 https://bitbucket.org/multicoreware/x265_git/get/master.tar.bz2
          tar xjvf x265.tar.bz2
          cd multicoreware*/build/linux
          PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" \
            -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" \
            -DENABLE_SHARED=off \
            -DHIGH_BIT_DEPTH=ON ../../source
          PATH="$HOME/bin:$PATH" make -j$(nproc)
          make install
          cd ../../..

      - name: Build x264
        run: |
          git -C x264 pull 2> /dev/null || git clone --depth 1 https://code.videolan.org/videolan/x264.git
          cd x264
          PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" \
            ./configure --prefix="$HOME/ffmpeg_build" \
            --bindir="$HOME/bin" \
            --enable-static \
            --enable-pic
          PATH="$HOME/bin:$PATH" make -j$(nproc)
          make install
          cd ..

      - name: Build Opus
        run: |
          git -C opus pull 2> /dev/null || git clone --depth 1 https://github.com/xiph/opus.git
          cd opus
          ./autogen.sh
          ./configure --prefix="$HOME/ffmpeg_build" --disable-shared
          make -j$(nproc)
          make install
          cd ..

      - name: Build FDK-AAC
        run: |
          git -C fdk-aac pull 2> /dev/null || git clone --depth 1 https://github.com/mstorsjo/fdk-aac
          cd fdk-aac
          autoreconf -fiv
          ./configure --prefix="$HOME/ffmpeg_build" --disable-shared
          make -j$(nproc)
          make install
          cd ..

      - name: Build DAV1D
        run: |
          git -C dav1d pull 2> /dev/null || git clone --depth 1 https://code.videolan.org/videolan/dav1d.git
          mkdir -p dav1d/build
          cd dav1d/build
          meson setup -Denable_tools=false \
            -Denable_tests=false \
            --default-library=static .. \
            --prefix "$HOME/ffmpeg_build" \
            --libdir="$HOME/ffmpeg_build/lib"
          ninja
          ninja install
          cd ../..

      - name: Build libvpx
        run: |
          git -C libvpx pull 2> /dev/null || git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git
          cd libvpx
          PATH="$HOME/bin:$PATH" ./configure \
            --prefix="$HOME/ffmpeg_build" \
            --disable-examples \
            --disable-unit-tests \
            --enable-vp9-highbitdepth \
            --as=yasm
          PATH="$HOME/bin:$PATH" make -j$(nproc)
          make install
          cd ..

      - name: Build AOM
        run: |
          git -C aom pull 2> /dev/null || git clone --depth 1 https://aomedia.googlesource.com/aom
          mkdir -p aom_build
          cd aom_build
          PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" \
            -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" \
            -DENABLE_TESTS=OFF \
            -DENABLE_NASM=on ../aom
          PATH="$HOME/bin:$PATH" make -j$(nproc)
          make install
          cd ..

      - name: Build FFmpeg
        run: |
          git clone https://git.ffmpeg.org/ffmpeg.git ffmpeg
          cd ffmpeg
          git checkout master
          export LD_LIBRARY_PATH+=":/usr/local/lib"
          PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
            --extra-cflags="-I$HOME/ffmpeg_build/include" \
            --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
            --extra-libs="-lpthread -lm" \
            --enable-gpl \
            --enable-libx264 \
            --enable-libx265 \
            --enable-libvpx \
            --enable-libfdk-aac \
            --enable-libmp3lame \
            --enable-libopus \
            --enable-libvorbis \
            --enable-libass \
            --enable-libsvtav1 \
            --enable-libaom \
            --enable-libdav1d \
            --enable-nonfree \
            --enable-static \
            --pkg-config-flags="--static" \
            --disable-shared
          make -j$(nproc)
          ./ffmpeg -version

      - name: Package FFmpeg
        run: |
          cd ffmpeg
          mkdir ffmpeg-package
          cp ./ffmpeg ffmpeg-package/
          cp ./ffprobe ffmpeg-package/
          zip -r ../ffmpeg-package.zip ffmpeg-package

      - name: Get current date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ffmpeg-package.zip
          tag_name: ${{ env.DATE }}
